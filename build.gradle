plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'application'
}

group = 'com.seacreeper'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.5.0'
    implementation 'org.springframework.data:spring-data-rest-hal-explorer:3.5.1'
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.12.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.3'
//    implementation 'org.springframework.cloud:spring-cloud-starter-config:3.0.4'
    implementation 'org.springframework.kafka:spring-kafka'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

bootJar {
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}
